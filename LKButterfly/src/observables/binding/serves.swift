// Generated by Khrysalis Swift converter - this file will be overwritten.
// File: observables/binding/serves.kt
// Package: com.lightningkite.butterfly.observables.binding
import Foundation

public extension MutableObservableProperty {
    func serves(until: DisposeCondition, other: MutableObservableProperty<T>) -> Void {
        
        var suppress = false
        
        other.observable.subscribe(onNext: { (value) -> Void in if (!suppress) {
                    suppress = true
                    self.value = value
                    suppress = false
        } }, onError: nil, onCompleted: nil).until(condition: until)
        
        self.onChange.subscribe(onNext: { (value) -> Void in if (!suppress) {
                    suppress = true
                    other.value = value
                    suppress = false
        } }, onError: nil, onCompleted: nil).until(condition: until)
    }
}



